{
	"GeoRegionsFormInputFields": [
		{
			"name": "name",
			"id": "name",
			"dataTestId": "createBudgetName",
			"testId": "createBudgetNameInput",
			"label": "Name",
			"size": 6,
			"required": true
		},
		{
			"name": "description",
			"id": "description",
			"dataTestId": "createBudgetDescription",
			"testId": "createBudgetDescriptionInput",
			"label": "Description",
			"size": 6
		},
		{
			"name": "country_id",
			"id": "country_id",
			"dataTestId": "georegionsCountry",
			"testId": "georegionsCountryInput",
			"label": "Country",
			"optionsArray": [],
			"inputLabelId": "demo-simple-select-outlined-label",
			"selectLabelId": "demo-simple-select-outlined-label",
			"selectId": "demo-simple-select-outlined-1",
			"inputType": "select",
			"required": false,
			"addNew": false,
			"getInputValue": {},
			"multiple": false,
			"addNewClick": {},
			"size": 6
		},
		{
			"name": "state_id",
			"id": "state_id",
			"dataTestId": "georegionsState",
			"testId": "georegionsStateInput",
			"label": "State",
			"optionsArray": [],
			"inputLabelId": "demo-simple-select-outlined-label",
			"selectLabelId": "demo-simple-select-outlined-label",
			"selectId": "demo-simple-select-outlined-1",
			"inputType": "select",
			"required": false,
			"addNew": false,
			"getInputValue": {},
			"size": 6
		},
		{
			"name": "district_id",
			"id": "district_id",
			"dataTestId": "georegionsDistrict",
			"testId": "georegionsDistrictInput",
			"label": "District",
			"optionsArray": [],
			"inputLabelId": "demo-simple-select-outlined-label",
			"selectLabelId": "demo-simple-select-outlined-label",
			"selectId": "demo-simple-select-outlined-1",
			"inputType": "select",
			"required": false,
			"addNew": false,
			"getInputValue": {},
			"size": 6
		},
		{
			"name": "block_id",
			"id": "block_id",
			"dataTestId": "georegionsBlock",
			"testId": "georegionsBlockInput",
			"label": "Block",
			"optionsArray": [],
			"inputLabelId": "demo-simple-select-outlined-label",
			"selectLabelId": "demo-simple-select-outlined-label",
			"selectId": "demo-simple-select-outlined-1",
			"inputType": "select",
			"required": false,
			"addNew": false,
			"getInputValue": {},
			"size": 6
		},
		{
			"name": "gp_id",
			"id": "gp_id",
			"dataTestId": "georegionsGrampanchayat",
			"testId": "georegionsGrampanchayatInput",
			"label": "Grampanchayat",
			"optionsArray": [],
			"inputLabelId": "demo-simple-select-outlined-label",
			"selectLabelId": "demo-simple-select-outlined-label",
			"selectId": "demo-simple-select-outlined-1",
			"inputType": "select",
			"required": false,
			"addNew": false,
			"getInputValue": {},
			"size": 6
		},
		{
			"name": "village_id",
			"id": "village_id",
			"dataTestId": "georegionsVillage",
			"testId": "georegionsvillageInput",
			"label": "Village",
			"optionsArray": [],
			"inputLabelId": "demo-simple-select-outlined-label",
			"selectLabelId": "demo-simple-select-outlined-label",
			"selectId": "demo-simple-select-outlined-1",
			"inputType": "select",
			"required": false,
			"addNew": false,
			"getInputValue": {},
			"size": 6
		}
	]
}


import React from "react";
import SelectField from "material-ui/SelectField";
import MenuItem from "material-ui/MenuItem";

const names = [
  "Oliver Hansen",
  "Van Henry",
  "April Tucker",
  "Ralph Hubbard",
  "Omar Alexander",
  "Carlos Abbott",
  "Miriam Wagner",
  "Bradley Wilkerson",
  "Virginia Andrews",
  "Kelly Snyder"
];

class App extends React.Component {
  state = {
    values: []
  };

  const [values, setValues] = useState([]);

  handleChange = (event, key, values) => {
    this.setState({ values });
	setValues(values)
  };

  selectionRenderer = values => {
    // change the default comma separated rendering
    return (
      <span style={{ color: "#ff4081" }}>
        {values.join("; ")}
      </span>
    );
  };

  menuItems(values) {
    return names.map(name => (
      <MenuItem
        key={name}
        insetChildren={true}
        checked={values.includes(name)}
        value={name}
        primaryText={name}
      />
    ));
  }

  render() {
    const { values } = this.state;
    const floatingLabelText = "Names" +
      (values.length > 1 ? ` (${values.length})` : "");
    return (
      <SelectField
        multiple={true}
        floatingLabelText={floatingLabelText}
        value={values}
        onChange={this.handleChange}
        selectionRenderer={this.selectionRenderer}
      >
        {this.menuItems(values)}
      </SelectField>
    );
  }
}

export default App;